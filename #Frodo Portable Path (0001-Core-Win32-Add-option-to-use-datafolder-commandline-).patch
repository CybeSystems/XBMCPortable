From 108f19a6c4fcd7ccc7b3c671df6083f57fe88d4e Mon Sep 17 00:00:00 2001
From: LORDofDOOM <tb@bbz-int.de>
Date: Tue, 21 Jan 2014 08:28:12 +0100
Subject: [PATCH] [Core][Win32] Add option to use --datafolder commandline
 parameter, useful for e.g. PortableApps

---
 xbmc/Application.cpp             | 21 +++++++++++++++++----
 xbmc/Application.h               | 11 +++++++++++
 xbmc/settings/AppParamParser.cpp |  2 ++
 xbmc/win32/WIN32Util.cpp         |  9 ++++++++-
 4 files changed, 38 insertions(+), 5 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index b8a7918..c4c1f75 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -423,6 +423,8 @@ CApplication::CApplication(void)
 
   m_bPresentFrame = false;
   m_bPlatformDirectories = true;
+  
+  m_bPlatformDataFolder = "";
 
   m_bStandalone = false;
   m_bEnableLegacyRes = false;
@@ -1020,14 +1022,25 @@ bool CApplication::InitDirectoriesLinux()
   {
     URIUtils::AddSlashAtEnd(xbmcPath);
     g_settings.m_logFolder = xbmcPath;
+	
+	CStdString strDataFolder;
+	strDataFolder = g_application.GetDataFolder();	
 
     CSpecialProtocol::SetXBMCBinPath(xbmcBinPath);
     CSpecialProtocol::SetXBMCPath(xbmcPath);
-    CSpecialProtocol::SetHomePath(URIUtils::AddFileToFolder(xbmcPath, "portable_data"));
-    CSpecialProtocol::SetMasterProfilePath(URIUtils::AddFileToFolder(xbmcPath, "portable_data/userdata"));
+	
+	if (strDataFolder == "") {
+		CSpecialProtocol::SetHomePath(URIUtils::AddFileToFolder(xbmcPath, "portable_data"));
+		CSpecialProtocol::SetMasterProfilePath(URIUtils::AddFileToFolder(xbmcPath, "portable_data/userdata"));
+		CStdString strTempPath = xbmcPath;
+		strTempPath = URIUtils::AddFileToFolder(strTempPath, "portable_data/temp");		
+	} else {
+		CSpecialProtocol::SetHomePath(URIUtils::AddFileToFolder(strDataFolder, "portable_data"));
+		CSpecialProtocol::SetMasterProfilePath(URIUtils::AddFileToFolder(strDataFolder, "portable_data/userdata"));
+		CStdString strTempPath = xbmcPath;
+		strTempPath= URIUtils::AddFileToFolder(strDataFolder, "portable_data/temp");
+	}
 
-    CStdString strTempPath = xbmcPath;
-    strTempPath = URIUtils::AddFileToFolder(strTempPath, "portable_data/temp");
     if (getenv("XBMC_TEMP"))
       strTempPath = getenv("XBMC_TEMP");
     CSpecialProtocol::SetTempPath(strTempPath);
diff --git a/xbmc/Application.h b/xbmc/Application.h
index 69609fa..4e2ceb4 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -318,6 +318,16 @@ public:
     return m_bPlatformDirectories;
   }
 
+  void DataFolder(const CStdString &filename)
+  {
+    m_bPlatformDataFolder = filename;
+  }
+
+  CStdString GetDataFolder()
+  {
+    return m_bPlatformDataFolder;
+  }  
+  
   void SetStandAlone(bool value);
 
   bool IsStandAlone()
@@ -405,6 +415,7 @@ protected:
   PLAYERCOREID m_eCurrentPlayer;
   bool m_bInitializing;
   bool m_bPlatformDirectories;
+  CStdString m_bPlatformDataFolder;
 
   CBookmark& m_progressTrackingVideoResumeBookmark;
   CFileItemPtr m_progressTrackingItem;
diff --git a/xbmc/settings/AppParamParser.cpp b/xbmc/settings/AppParamParser.cpp
index 491b9e5..0e0b1a7 100644
--- a/xbmc/settings/AppParamParser.cpp
+++ b/xbmc/settings/AppParamParser.cpp
@@ -129,6 +129,8 @@ void CAppParamParser::ParseArg(const CStdString &arg)
     g_application.SetStandAlone(true);
   else if (arg == "-p" || arg  == "--portable")
     g_application.EnablePlatformDirectories(false);
+  else if (arg.substr(0, 13) == "--datafolder=")
+    g_application.DataFolder(arg.substr(13));	
   else if (arg == "--debug")
     EnableDebugMode();
   else if (arg == "--legacy-res")
diff --git a/xbmc/win32/WIN32Util.cpp b/xbmc/win32/WIN32Util.cpp
index 2e12b44..5edec05 100644
--- a/xbmc/win32/WIN32Util.cpp
+++ b/xbmc/win32/WIN32Util.cpp
@@ -456,13 +456,20 @@ CStdString CWIN32Util::GetProfilePath()
 {
   CStdString strProfilePath;
   CStdString strHomePath;
+  
+  CStdString strDataFolder;
+  strDataFolder = g_application.GetDataFolder();  
 
   CUtil::GetHomePath(strHomePath);
 
   if(g_application.PlatformDirectoriesEnabled())
     strProfilePath = URIUtils::AddFileToFolder(GetSpecialFolder(CSIDL_APPDATA|CSIDL_FLAG_CREATE), "XBMC");
   else
-    strProfilePath = URIUtils::AddFileToFolder(strHomePath , "portable_data");
+	if (strDataFolder == "") {
+		strProfilePath = URIUtils::AddFileToFolder(strHomePath , "portable_data");
+	} else {
+		strProfilePath = URIUtils::AddFileToFolder(strDataFolder, "portable_data");
+	}
 
   if (strProfilePath.length() == 0)
     strProfilePath = strHomePath;
-- 
1.8.3.msysgit.0

